# .github/workflows/destroy.yml
name: Terraform Destroy (auto on push to `destroy`)

on:
  push:
    branches: [ destroy ]   # any push to branch "destroy" will trigger

env:
  AWS_REGION: us-east-1

concurrency:
  group: destroy-lock
  cancel-in-progress: false

jobs:
  destroy:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.1      # your config allows >=1.6.3,<2.0
          terraform_wrapper: false

      - name: Terraform init (use backend from code)
        run: terraform init -reconfigure

      - name: Show workspace
        run: terraform workspace show || true

      - name: Plan destroy
        run: terraform plan -destroy -no-color -input=false -out=destroy.tfplan

      - name: Upload destroy plan (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: tf-destroy-plan
          path: terraform/destroy.tfplan

      - name: Apply destroy
        run: terraform apply -input=false -auto-approve -parallelism=1 destroy.tfplan

      - name: Show remaining state
        run: terraform state list || echo "No resources left in state."
